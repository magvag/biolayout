// Generated by KLFC 1.5.7
// https://github.com/39aldo39/klfc

default
xkb_symbols "basic" {
    key.type[Group1] = "NONE_SHIFT_CONTROL_ALT+CONTROL_SHIFT+ALT+CONTROL";
    key <AE01> { [            1,       exclam,   VoidSymbol, onesubscript,  onesuperior ] };
    key <AE02> { [            2,           at,   VoidSymbol, twosubscript,  twosuperior ] };
    key <AE03> { [            3,   numbersign,   VoidSymbol, threesubscript, threesuperior ] };
    key <AE04> { [            4,       dollar,   VoidSymbol, foursubscript, foursuperior ] };
    key <AE05> { [            5,      percent,   VoidSymbol, fivesubscript, fivesuperior ] };
    key <AE06> { [            6,  asciicircum,   VoidSymbol, sixsubscript,  sixsuperior ] };
    key <AE07> { [            7,    ampersand,   VoidSymbol, sevensubscript, sevensuperior ] };
    key <AE08> { [            8,     asterisk,   VoidSymbol, eightsubscript, eightsuperior ] };
    key <AE09> { [            9,    parenleft,   VoidSymbol, ninesubscript, ninesuperior ] };
    key <AE10> { [            0,   parenright,   VoidSymbol, zerosubscript, zerosuperior ] };
    key <AE11> { [        minus,   underscore,   VoidSymbol,       emdash,       endash ] };
    key <AE12> { [        equal,         plus,   VoidSymbol,     notequal,    plusminus ] };
    key.type[Group1] = "NONE_SHIFT_CONTROL_ALT+CONTROL_SHIFT+ALT+CONTROL_ALPHABETIC";
    key <AD01> { [            q,            Q,   VoidSymbol,           ae,           AE ] };
    key <AD02> { [            w,            W,   VoidSymbol,           oe,           OE ] };
    key <AD03> { [            e,            E,   VoidSymbol, Greek_epsilon,     EuroSign ] };
    key <AD04> { [            r,            R,   VoidSymbol,    Greek_rho,   registered ] };
    key <AD05> { [            t,            T,   VoidSymbol,    Greek_tau,    trademark ] };
    key <AD06> { [            y,            Y,   VoidSymbol,    Greek_psi,        caron ] };
    key <AD07> { [            u,            U,   VoidSymbol,     infinity,    diaeresis ] };
    key <AD08> { [            i,            I,   VoidSymbol,      minutes,      seconds ] };
    key <AD09> { [            o,            O,   VoidSymbol,     abovedot,        U207B ] };
    key <AD10> { [            p,            P,   VoidSymbol,     Greek_pi,        U207A ] };
    key.type[Group1] = "NONE_SHIFT_CONTROL_ALT+CONTROL_SHIFT+ALT+CONTROL";
    key <AD11> { [  bracketleft,    braceleft,   VoidSymbol,  bracketleft,    leftarrow ] };
    key <AD12> { [ bracketright,   braceright,   VoidSymbol, bracketright,   rightarrow ] };
    key.type[Group1] = "NONE_SHIFT_CONTROL_ALT+CONTROL_SHIFT+ALT+CONTROL_ALPHABETIC";
    key <AC01> { [            a,            A,   VoidSymbol,  Greek_alpha,        U02DA ] };
    key <AC02> { [            s,            S,   VoidSymbol,  Greek_sigma,      section ] };
    key <AC03> { [            d,            D,   VoidSymbol,  Greek_delta,  Greek_DELTA ] };
    key <AC04> { [            f,            F,   VoidSymbol,    Greek_phi,        U02C6 ] };
    key <AC05> { [            g,            G,   VoidSymbol,  Greek_gamma,       degree ] };
    key <AC06> { [            h,            H,   VoidSymbol,   numbersign,        U20BD ] };
    key <AC07> { [            j,            J,   VoidSymbol,       oslash,       Oslash ] };
    key <AC08> { [            k,            K,   VoidSymbol,           at,        U2039 ] };
    key <AC09> { [            l,            L,   VoidSymbol,  Greek_lamda,        U203A ] };
    key.type[Group1] = "NONE_SHIFT_CONTROL_ALT+CONTROL_SHIFT+ALT+CONTROL";
    key <AC10> { [    semicolon,        colon,   VoidSymbol, leftsinglequotemark, leftdoublequotemark ] };
    key <AC11> { [   apostrophe,     quotedbl,   VoidSymbol, rightsinglequotemark, rightdoublequotemark ] };
    key <TLDE> { [        grave,   asciitilde,   VoidSymbol,        U2248,        grave ] };
    key <BKSL> { [    backslash,          bar,   VoidSymbol,   exclamdown, questiondown ] };
    key.type[Group1] = "NONE_SHIFT_CONTROL_ALT+CONTROL_SHIFT+ALT+CONTROL_ALPHABETIC";
    key <AB01> { [            z,            Z,   VoidSymbol,     division,        U2044 ] };
    key <AB02> { [            x,            X,   VoidSymbol,     multiply, periodcentered ] };
    key <AB03> { [            c,            C,   VoidSymbol,    copyright,      cedilla ] };
    key <AB04> { [            v,            V,   VoidSymbol,    downarrow,      uparrow ] };
    key <AB05> { [            b,            B,   VoidSymbol,   Greek_beta,       ssharp ] };
    key <AB06> { [            n,            N,   VoidSymbol,     Greek_nu,        U02DC ] };
    key <AB07> { [            m,            M,   VoidSymbol,     Greek_mu,        U2212 ] };
    key.type[Group1] = "NONE_SHIFT_CONTROL_ALT+CONTROL_SHIFT+ALT+CONTROL";
    key <AB08> { [        comma,         less,   VoidSymbol, guillemotleft, doublelowquotemark ] };
    key <AB09> { [       period,      greater,   VoidSymbol, guillemotright, leftdoublequotemark ] };
    key <AB10> { [        slash,     question,   VoidSymbol,        slash,        acute ] };
    key <SPCE> { [        space,        space,        space, nobreakspace,        U202F ] };
    key <LSGT> { [    backslash,          bar,   VoidSymbol,   VoidSymbol,   VoidSymbol ] };
    key <KPDL> { [       period,       period,   VoidSymbol,   VoidSymbol,   VoidSymbol ] };
};
